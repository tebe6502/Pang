mads 2.0.4 build 2 (23 Mar 16)
Source: D:\!Atari\Pang_2\test\antic3.asm
     1 				/***************************************/
     2 				/*  Use MADS http://mads.atari8.info/  */
     3 				/*  Mode: DLI (char mode)              */
     4 				/***************************************/
     5
     6 					icl "antic3.h"
Source: D:\!Atari\Pang_2\test\antic3.h
     1
     2 				.enum	@dmactl
     3 = 0000				blank	= %00
     4 = 0001				narrow	= %01
     5 = 0002				standard= %10
     6 = 0003				wide	= %11
     7 = 0004				missiles= %100
     8 = 0008				players	= %1000
     9 = 0010				lineX1	= %10000
    10 = 0000				lineX2	= %00000
    11 = 0020				dma	= %100000
    12 				.ende
    13
    14 = 003F			scr48	= @dmactl(wide|dma|players|missiles|lineX1)		;screen 48b
    15 = 003E			scr40	= @dmactl(standard|dma|players|missiles|lineX1)		;screen 40b
    16 = 003D			scr32	= @dmactl(narrow|dma|players|missiles|lineX1)		;screen 32b
    17
    18 				.enum	@pmcntl
    19 = 0001				missiles= %1
    20 = 0002				players	= %10
    21 = 0004				trigs	= %100
    22 				.ende
    23
    24 				.enum	@gtictl
    25 = 0000				prior0	= %0
    26 = 0001				prior1	= %1
    27 = 0002				prior2	= %10
    28 = 0004				prior4	= %100
    29 = 0008				prior8	= %1000
    30 = 0010				ply5	= %10000	; Fifth Player Enable
    31 = 0020				mlc	= %100000	; Multiple Color Player Enable
    32 = 0040				mode9	= %01000000
    33 = 0080				mode10	= %10000000
    34 = 00C0				mode11	= %11000000
    35 				.ende
    36
    37
    38 				* ---------------------------------------------------------------------------------------------
    39 				* ---	OS
    40 				* ---------------------------------------------------------------------------------------------
    41
    42 = 0052			lmargin	= $52
    43 = 0053			rmargin	= $53
    44 = 0054			rowcrs	= $54
    45 = 0055			colcrs	= $55
    46
    47 				* ---------------------------------------------------------------------------------------------
    48 				* ---	KEY ($d209)
    49 				* ---------------------------------------------------------------------------------------------
    50 = 001C			key_esc		= 28
    51 = 0021			key_space	= 33
    52 = 0010			key_v		= 16
    53 = 0015			key_b		= 21
    54 = 0023			key_n		= 35
    55 = 0025			key_m		= 37
    56
    57 				* ---------------------------------------------------------------------------------------------
    58 				* ---	GTIA
    59 				* ---------------------------------------------------------------------------------------------
    60 = D000			hposp0	=	$D000		; pozioma pozycja gracza 0 (Z)
    61 = D001			hposp1	=	$D001		; pozioma pozycja gracza 1 (Z)
    62 = D002			hposp2	=	$D002		; pozioma pozycja gracza 2 (Z)
    63 = D003			hposp3	=	$D003		; pozioma pozycja gracza 3 (Z)
    64 = D004			hposm0	=	$D004		; pozioma pozycja pocisku 0 (Z)
    65 = D005			hposm1	=	$D005		; pozioma pozycja pocisku 1 (Z)
    66 = D006			hposm2	=	$D006		; pozioma pozycja pocisku 2 (Z)
    67 = D007			hposm3	=	$D007		; pozioma pozycja pocisku 3 (Z)
    68 = D008			sizep0	=	$D008		; poziomy rozmiar gracza 0 (Z)
    69 = D009			sizep1	=	$D009		; poziomy rozmiar gracza 1 (Z)
    70 = D00A			sizep2	=	$D00A		; poziomy rozmiar gracza 2 (Z)
    71 = D00B			sizep3	=	$D00B		; poziomy rozmiar gracza 3 (Z)
    72 = D00C			sizem	=	$D00C		; poziomy rozmiar pocisków (Z)
    73 = D00D			grafp0	=	$D00D		; rejestr grafiki gracza 0 (Z)
    74 = D00E			grafp1	=	$D00E		; rejestr grafiki gracza 1 (Z)
    75 = D00F			grafp2	=	$D00F		; rejestr grafiki gracza 2 (Z)
    76 = D010			grafp3	=	$D010		; rejestr grafiki gracza 3 (Z)
    77 = D011			grafm	=	$D011		; rejestr grafiki pocisków (Z)
    78 = D012			colpm0	=	$D012		; rejestr koloru gracza i pocisku 0 (Z)
    79 = D013			colpm1	=	$D013		; rejestr koloru gracza i pocisku 1 (Z)
    80 = D014			colpm2	=	$D014		; rejestr koloru gracza i pocisku 2 (Z)
    81 = D015			colpm3	=	$D015		; rejestr koloru gracza i pocisku 3 (Z)
    82 = D016			colpf0	=	$D016		; rejestr koloru pola gry 0 (Z)
    83 = D017			colpf1	=	$D017		; rejestr koloru pola gry 1 (Z)
    84 = D018			colpf2	=	$D018		; rejestr koloru pola gry 2 (Z)
    85 = D019			colpf3	=	$D019		; rejestr koloru pola gry 3 (Z)
    86 = D01A			colbak	=	$D01A		; rejestr koloru t³a (Z)
    87
    88 = D016			color0	=	colpf0
    89 = D017			color1	=	colpf1
    90 = D018			color2	=	colpf2
    91 = D019			color3	=	colpf3
    92
    93 = D000			kolm0pf	=	$D000		; kolizja pocisku 0 z polem gry (O)
    94 = D001			kolm1pf	=	$D001		; kolizja pocisku 1 z polem gry (O)
    95 = D002			kolm2pf	=	$D002		; kolizja pocisku 2 z polem gry (O)
    96 = D003			kolm3pf	=	$D003		; kolizja pocisku 3 z polem gry (O)
    97 = D004			kolp0pf	=	$D004		; kolizja gracza 0 z polem gry (O)
    98 = D005			kolp1pf	=	$D005		; kolizja gracza 1 z polem gry (O)
    99 = D006			kolp2pf	=	$D006		; kolizja gracza 2 z polem gry (O)
   100 = D007			kolp3pf	=	$D007		; kolizja gracza 3 z polem gry (O)
   101 = D008			kolm0p	=	$D008		; kolizja pocisku 0 z graczem (O)
   102 = D009			kolm1p	=	$D009		; kolizja pocisku 1 z graczem (O)
   103 = D00A			kolm2p	=	$D00A		; kolizja pocisku 2 z graczem (O)
   104 = D00B			kolm3p	=	$D00B		; kolizja pocisku 3 z graczem (O)
   105 = D00C			kolp0p	=	$D00C		; kolizja gracza 0 z innym graczem (O)
   106 = D00D			kolp1p	=	$D00D		; kolizja gracza 1 z innym graczem (O)
   107 = D00E			kolp2p	=	$D00E		; kolizja gracza 2 z innym graczem (O)
   108 = D00F			kolp3p	=	$D00F		; kolizja gracza 3 z innym graczem (O)
   109 = D010			trig0	=	$D010		; stan przycisku joysticka 0 (O)
   110 = D011			trig1	=	$D011		; stan przycisku joysticka 1 (O)
   111 = D013			trig3	=	$D013		; znacznik do³¹czenia cartridge-a (O)
   112 = D014			pal	=	$D014		; znacznik systemu TV (O)
   113
   114 = D01B			gtictl	=	$D01B		; rejestr kontroli uk³adu GTIA
   115 = D01B			gtiactl	=	gtictl
   116
   117 = D01C			vdelay	=	$D01C		; licznik opóŸnienia pionowego P/MG
   118 = D01D			pmcntl	=	$D01D		; rejestr kontroli graczy i pocisków
   119 = D01E			hitclr	=	$D01E		; rejestr kasowania rejestrów kolizji
   120 = D01F			consol	=	$D01F		; rejestr stanu klawiszy konsoli
   121
   122 				* ---------------------------------------------------------------------------------------------
   123 				* ---	POKEY
   124 				* ---------------------------------------------------------------------------------------------
   125
   126 = 0010			irqens	=	$0010		; rejestr-cieñ IRQEN
   127 = 0011			irqstat	=	$0011		; rejestr-cieñ IRQST
   128
   129 = D200			audf1	=	$d200		; czêstotliwoœæ pracy generatora 1 (Z)
   130 = D201			audc1	=	$d201		; rejestr kontroli dŸwiêku generatora 1 (Z)
   131 = D202			audf2	=	$d202		; czêstotliwoœæ pracy generatora 2 (Z)
   132 = D203			audc2	=	$d203		; rejestr kontroli dŸwiêku generatora 2 (Z)
   133 = D204			audf3	=	$d204		; czêstotliwoœæ pracy generatora 3 (Z)
   134 = D205			audc3	=	$d205		; rejestr kontroli dŸwiêku generatora 3 (Z)
   135 = D206			audf4	=	$d206		; czêstotliwoœæ pracy generatora 4 (Z)
   136 = D207			audc4	=	$d207		; rejestr kontroli dŸwiêku generatora 4 (Z)
   137
   138 = D208			audctl	=	$D208		; rejestr kontroli generatorów dŸwiêku (Z)
   139 = D209			stimer	=	$D209		; rejestr zerowania liczników (Z)
   140 = D209			kbcode	=	$D209		; kod ostatnio naciœniêtego klawisza (O)
   141 = D20A			skstres	=	$D20A		; rejestr statusu z³¹cza szeregowego (Z)
   142 = D20A			random	=	$D20A		; rejestr liczby losowej (O)
   143 = D20D			serout	=	$D20D		; szeregowy rejestr wyjœciowy (Z)
   144 = D20D			serin	=	$D20D		; szeregowy rejestr wejœciowy (O)
   145 = D20E			irqen	=	$D20E		; zezwolenie przerwañ IRQ (Z)
   146 = D20E			irqst	=	$D20E		; status przerwañ IRQ (O)
   147 = D20F			skctl	=	$D20F		; rejestr kontroli z³¹cza szeregowego (Z)
   148 = D20F			skstat	=	$D20F		; rejestr statusu z³¹cza szeregowego (O)
   149
   150 				* ---------------------------------------------------------------------------------------------
   151 				* ---	PIA
   152 				* ---------------------------------------------------------------------------------------------
   153 = D300			porta	=	$D300		; port A uk³adu PIA
   154 = D301			portb	=	$D301		; port B uk³adu PIA
   155 = D302			pactl	=	$D302		; rejestr kontroli portu A
   156 = D303			pbctl	=	$D303		; rejestr kontroli portu B
   157
   158 				* ---------------------------------------------------------------------------------------------
   159 				* ---	ANTIC
   160 				* ---------------------------------------------------------------------------------------------
   161 = D400			dmactl	=	$D400		; rejestr kontroli dostêpu do pamiêci
   162 = D401			chrctl	=	$D401		; rejestr kontroli wyœwietlania znaków
   163 = D402			dlptr	=	$D402		; adres programu ANTIC-a
   164 = D404			hscrol	=	$D404		; znacznik poziomego przesuwu obrazu
   165 = D405			vscrol	=	$D405		; znacznik pionowego przesuwu obrazu
   166 = D407			pmbase	=	$D407		; adres pamiêci graczy i pocisków
   167 = D409			chbase	=	$D409		; adres zestawu znaków
   168 = D40A			wsync	=	$D40A		; znacznik oczekiwania na synchronizacjê poziom¹
   169 = D40B			vcount	=	$D40B		; licznik linii obrazu
   170 = D40C			lpenh	=	$D40C		; poziome po³o¿enie pióra œwietlengo
   171 = D40D			lpenv	=	$D40D		; pionowe po³o¿enie pióra œwietlnego
   172 = D40E			nmien	=	$D40E		; rejestr zezwoleñ na przerwania NMI
   173 = D40F			nmist	=	$D40F		; rejestr statusu przerwañ NMI
   174
   175 				* ---------------------------------------------------------------------------------------------
   176 				* ---	OS
   177 				* ---------------------------------------------------------------------------------------------
   178
   179 = 02C4			colpf0s	=	$02C4		; rejestr-cieñ COLPF0
   180 = 02C5			colpf1s	=	$02C5		; rejestr-cieñ COLPF1
   181 = 02C6			colpf2s	=	$02C6		; rejestr-cieñ COLPF2
   182 = 02C7			colpf3s	=	$02C7		; rejestr-cieñ COLPF3
   183 = 02C8			colbaks	=	$02C8		; rejestr-cieñ COLBAK
     7
     8 					org $f0
     9
    10 = 00F0			fcnt	.ds 2
    11 = 00F2			fadr	.ds 2
    12 = 00F4			fhlp	.ds 2
    13 = 00F6			cloc	.ds 1
    14 = 00F7			regA	.ds 1
    15 = 00F8			regX	.ds 1
    16 = 00F9			regY	.ds 1
    17
    18 = 0028			WIDTH	= 40
    19 = 001E			HEIGHT	= 30
    20
    21 				; ---	BASIC switch OFF
    22 					org $2000\ mva #$ff portb\ rts\ ini $2000
    22 					ORG $2000
    22 FFFF> 2000-2005> A9 FF +  MVA #$FF PORTB
    22 2005 60			 RTS
    22 02E2-02E3> 00 20		 INI $2000
    23
    24 				; ---	MAIN PROGRAM
    25 2006				org $2000
    26 2000-21B2> 42 23 20	ant	dta $42,a(scr)
    27 2003 02 02 02 02 03 03 + 	dta $02,$02,$02,$02,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$02,$02
    28 2013 02 02 02 02 02 02 + 	dta $02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$22
    29 2020 41 00 20			dta $41,a(ant)
    30
    31 2023 00 01 02 03 04 05 + scr	ins "antic3.scr",0,5*40
    32 20EB 00 01 02 03 04 05 + 	ins "antic3.scr",0,5*40
    33
    34 21B3				.ALIGN $0400
    35 2400-28E3> 00 00 00 00 + fnt	ins "antic3.fnt"
    36
    37 					ift USESPRITES
    38 					.ALIGN $0800
    39 				pmg	.ds $0300
    40 					ift FADECHR = 0
    41 					SPRITES
    42 					els
    43 					.ds $500
    44 					eif
    45 					eif
    46
    47 2800			main
    48 				; ---	init PMG
    49
    50 					ift USESPRITES
    51 					mva >pmg pmbase		;missiles and players data address
    52 					mva #$03 pmcntl		;enable players and missiles
    53 					eif
    54
    55 2800 A5 14 C5 14 F0 FC		lda:cmp:req $14		;wait 1 frame
    56
    57 2806 78				sei			;stop IRQ interrupts
    58 2807 A9 00 8D 0E D4		mva #$00 nmien		;stop NMI interrupts
    59 280C 8D 00 D4			sta dmactl
    60 280F A9 FE 8D 01 D3		mva #$fe portb		;switch off ROM to get 16k more ram
    61
    62 2814 A9 58 8D FA FF A9 + 	mwa #NMI $fffa		;new NMI handler
    63
    64 281E A9 01 8D 05 D4		mva #1 vscrol
    65
    66 2823 A9 C0 8D 0E D4		mva #$c0 nmien		;switch on NMI+DLI again
    67
    68 					ift CHANGES		;if label CHANGES defined
    69
    70 2828 AD 10 D0		_lp	lda trig0		; FIRE #0
    71 282B F0 13			beq stop
    72
    73 282D AD 11 D0			lda trig1		; FIRE #1
    74 2830 F0 0E			beq stop
    75
    76 2832 AD 1F D0			lda consol		; START
    77 2835 29 01			and #1
    78 2837 F0 07			beq stop
    79
    80 2839 AD 0F D2			lda skctl
    81 283C 29 04			and #$04
    82 283E D0 E8			bne _lp			;wait to press any key; here you can put any own routine
    83
    84 					els
    85
    86 				null	jmp DLI.dli1		;CPU is busy here, so no more routines allowed
    87
    88 					eif
    89
    90
    91 2840			stop
    92 					.ifdef FADE_CHARS\ lda #0\ jsr fade_chars\ eif
    92 					.IFDEF FADE_CHARS
    92 				 LDA #0
    92 				 JSR FADE_CHARS
    92 				 EIF
    93
    94 2840 A9 00 8D 1D D0		mva #$00 pmcntl		;PMG disabled
    95 2845 AA				tax
    96 2846 9D 00 D0 E8 D0 FA		sta:rne hposp0,x+
    97
    98 284C A9 FF 8D 01 D3		mva #$ff portb		;ROM switch on
    99 2851 A9 40 8D 0E D4		mva #$40 nmien		;only NMI interrupts, DLI disabled
   100 2856 58				cli			;IRQ enabled
   101
   102 2857 60				rts			;return to ... DOS
   103
   104 				; ---	DLI PROGRAM
   105
   106 2858			.local	DLI
   107
   108 = 2858				?old_dli = *
   109
   110 					ift !CHANGES
   111
   112 				dli1	lda trig0		; FIRE #0
   113 					beq stop
   114
   115 					lda trig1		; FIRE #1
   116 					beq stop
   117
   118 					lda consol		; START
   119 					and #1
   120 					beq stop
   121
   122 					lda skctl
   123 					and #$04
   124 					beq stop
   125
   126 					lda vcount
   127 					cmp #$02
   128 					bne dli1
   129
   130 					:3 sta wsync
   131
   132 					jmp NMI.quit
   133 					eif
   134
   135
   136 2858			dli_start
   137
   138
   139 				.endl
   140
   141 				; ---
   142
   143 = 0001			CHANGES = 1
   144 = 0000			FADECHR	= 0
   145
   146 				; ---
   147
   148 2858			.proc	NMI
   149
   150 2858 2C 0F D4			bit nmist
   151 285B 10 03			bpl VBL
   152
   153 285D 4C 58 28			jmp DLI.dli_start
   154 = 285E			dliv	equ *-2
   155
   156 2860			VBL
   157 2860 85 F7			sta regA
   158 2862 86 F8			stx regX
   159 2864 84 F9			sty regY
   160
   161 2866 8D 0F D4			sta nmist		;reset NMI flag
   162
   163 2869 A9 00 8D 02 D4 A9 + 	mwa #ant dlptr		;ANTIC address program
   164
   165 2873 A9 3E 8D 00 D4		mva #scr40 dmactl	;set new screen width
   166
   167 2878 E6 F6			inc cloc		;little timer
   168
   169 				; Initial values
   170
   171 287A A9 24			lda >fnt+$400*$00
   172 287C 8D 09 D4			sta chbase
   173 287F A9 00		c0	lda #$00
   174 2881 8D 1A D0			sta colbak
   175 2884 A9 0E		c1	lda #$0E
   176 2886 8D 17 D0			sta color1
   177 2889 A9 00		c2	lda #$00
   178 288B 8D 18 D0			sta color2
   179 288E 8D 19 D0			sta color3
   180 2891 A9 02			lda #$02
   181 2893 8D 01 D4			sta chrctl
   182 2896 A9 04			lda #$04
   183 2898 8D 1B D0			sta gtictl
   184 289B A9 00		x0	lda #$00
   185 289D 8D 00 D0			sta hposp0
   186 28A0 8D 01 D0			sta hposp1
   187 28A3 8D 02 D0			sta hposp2
   188 28A6 8D 03 D0			sta hposp3
   189 28A9 8D 04 D0			sta hposm0
   190 28AC 8D 05 D0			sta hposm1
   191 28AF 8D 06 D0			sta hposm2
   192 28B2 8D 07 D0			sta hposm3
   193 28B5 8D 08 D0			sta sizep0
   194 28B8 8D 09 D0			sta sizep1
   195 28BB 8D 0A D0			sta sizep2
   196 28BE 8D 0B D0			sta sizep3
   197 28C1 8D 0C D0			sta sizem
   198 28C4 8D 12 D0			sta colpm0
   199 28C7 8D 13 D0			sta colpm1
   200 28CA 8D 14 D0			sta colpm2
   201 28CD 8D 15 D0			sta colpm3
   202 28D0 8D 16 D0			sta color0
   203
   204 28D3 A9 58 8D 5E 28 A9 + 	mwa #DLI.dli_start dliv	;set the first address of DLI interrupt
   205
   206 				;this area is for yours routines
   207
   208 28DD			quit
   209 28DD A5 F7			lda regA
   210 28DF A6 F8			ldx regX
   211 28E1 A4 F9			ldy regY
   212 28E3 40				rti
   213
   214 				.endp
   215
   216 				; ---
   217 02E0-02E1> 00 28			run main
   218 				; ---
   219
